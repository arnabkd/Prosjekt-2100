1:  /* Program 'strings'
2:    -----------------
3:    Implements C-like text strings, and demonstrates their use
4:    with a palindrome checker.
5: */
Parser:  <program>
Parser:    <var decl>
7: int s[201];            /* The actual text string */
Parser:    </var decl>
Parser:    <var decl>
Parser:    </var decl>
Parser:    <var decl>
8: int true;  int false;  /* Boolean values */
Parser:    </var decl>
Parser:    <var decl>
9: int LF;                /* Line feed character */
11: /* Reading routines: */
Parser:    </var decl>
Parser:    <func decl>
13: int getstring ()
14: {
Parser:      <var decl>
15:    int i;  int c;
Parser:      </var decl>
Parser:      <var decl>
Parser:      </var decl>
Parser:      <statm list>
Parser:        <assign-statm>
Parser:          <assignment>
Parser:            <variable>
17:    i = 0;
Parser:            </variable>
Parser:            <expression>
Parser:              <number>
Parser:              </number>
Parser:            </expression>
Parser:          </assignment>
Parser:        </assign-statm>
Parser:        <while-statm>
18:    while (true) {
Parser:          <expression>
Parser:            <variable>
Parser:            </variable>
Parser:          </expression>
Parser:          <statm list>
Parser:            <assign-statm>
Parser:              <assignment>
Parser:                <variable>
Parser:                </variable>
Parser:                <expression>
Parser:                  <function call>
19:       c = getchar();
Parser:                    <expr list>
Parser:                      <expression>
Parser:                      </expression>
Parser:                    </expr list>
